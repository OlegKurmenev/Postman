{
	"info": {
		"_postman_id": "8bbcc359-6e44-4dbb-8db0-9d87e5aa29b2",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23303957"
	},
	"item": [
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"// console.log(jsonData)\r",
							"\r",
							"pm.test(\"Req name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Oleg\");\r",
							"});\r",
							"pm.test(\"Req age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql+(35);\r",
							"});\r",
							"pm.test(\"Req salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"var req = request.data;\r",
							"// console.log(req)\r",
							"var req_age = req.age;\r",
							"var req_name = req.name;\r",
							"var req_salary = req.salary;\r",
							"\r",
							"pm.test(\"Req name = resp\", function () {\r",
							"    pm.expect(req_name).to.eql(jsonData.name);\r",
							"});\r",
							"pm.test(\"Req age = resp\", function () {\r",
							"    pm.expect(req_age).to.eql(jsonData.age);\r",
							"});\r",
							"pm.test(\"Req salary = resp\", function () {\r",
							"    pm.expect(+req_salary).to.eql(jsonData.salary);\r",
							"});\r",
							"console.log(jsonData.family)\r",
							"pm.test(\"Check salary 1.5\", function () {\r",
							"    pm.expect(+req_salary*4).to.eql(jsonData.family.u_salary_1_5_year);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Oleg",
							"type": "text"
						},
						{
							"key": "age",
							"value": "35",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"test name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req_url.name);\r",
							"});\r",
							"pm.test(\"test age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req_url.age);\r",
							"});\r",
							"pm.test(\"test salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(+req_url.salary);\r",
							"});\r",
							"\r",
							"console.log(jsonData.family)\r",
							"\r",
							"pm.test(\"Dog name =?\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"pm.test(\"Dog age ?\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.property(jsonData.family.pet.dog.age); // тут что то с проверкой наличия ключа\r",
							"});\r",
							"// var jsonData = pm.response.json();\r",
							"// var resp_age = jsonData.age;\r",
							"\r",
							"// var req = request.data;\r",
							"// var req_age = req.age;\r",
							"// var req_url = pm.request.url.query.toObject(); //спарсить url запроса\r",
							"\r",
							"// console.log(\"Resp_age = \" + resp_age)\r",
							"// console.log(\"Req_age = \" + req_age)\r",
							"// console.log(\"Req_url = \" + req_url.name) // Забрать параметр из урла (в данном случае name)\r",
							"\r",
							"\r",
							"// pm.test(\"Req_resp_Age-check\", function () {\r",
							"//     pm.expect(resp_age).to.eql(req_age);\r",
							"// });"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}/object_info_3?name=Oleg&age=35&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Oleg"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "weight",
							"value": "100",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}/object_info_4?name=Oleg&age=35&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Oleg"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "weight",
							"value": "100",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Oleg",
							"type": "text"
						},
						{
							"key": "age",
							"value": "35",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://162.55.220.72:5005",
			"type": "string"
		}
	]
}